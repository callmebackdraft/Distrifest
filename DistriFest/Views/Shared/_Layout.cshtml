@using DistriFest.Models.SignalR
@using Repositories
@using System.Security.Claims
@{
    var identity = (ClaimsIdentity)User.Identity;
    DistriFest.Models.ViewModels.ShoppingCartViewModel scvm;
    if (User.Identity.IsAuthenticated)
    {
        scvm = new DistriFest.Models.ViewModels.ShoppingCartViewModel(Convert.ToInt16(identity.Claims.Last().Value));
    }
    else
    {
        scvm = new DistriFest.Models.ViewModels.ShoppingCartViewModel();
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - DistriFest</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    @Styles.Render("~/Content/fontawesome")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="/"><img src="~/Content/Images/distrilogo_png.png" class="logo" style="margin-top: 8px;"/></a>
            </div>
            <div class="navbar-collapse collapse">
                @if (User.Identity.IsAuthenticated)
                {
                    <ul class="nav navbar-nav">
                        @if (User.IsInRole("StockOnly"))
                        {
                            <li>@Html.ActionLink("VoorraadBeheer", "StockControl", "Home")</li>
                        }
                        else
                        {

                            if (User.IsInRole("DC") || User.IsInRole("Admin") || User.IsInRole("SuperAdmin") || User.IsInRole("DCCoord"))
                            {
                                <li>@Html.ActionLink("Bestel Overzicht", "DCOverview", "Home")</li>
                                <li>@Html.ActionLink("Voorraadbeheer", "StockControl", "Home")</li>
                            }
                            if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin") || User.IsInRole("DCCoord"))
                            {
                                <li>@Html.ActionLink("Beheer Producten", "ManageProducts", "Home")</li>
                            }
                            if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                            {
                                <li>@Html.ActionLink("Reporting", "Reporting", "Home")</li>
                            }
                            if (User.IsInRole("Bar") || User.IsInRole("SuperAdmin"))
                            {
                                <li>@Html.ActionLink("Product lijst", "Ordering", "Home")</li>
                                <li>@Html.ActionLink("Mijn Bestellingen", "BarOrderView", "Home")</li>
                                <li><a href="#" class="clickable" style="font-size:1.5em;" data-toggle="modal" data-target="#ShoppingCart"><i class="fa fa-shopping-cart"></i><span style="font-size:14px;"> (@scvm.Order.Products.Sum(x => x.Amount))</span></a></li>
                            }
                            <li><a href="#" id="ChatModal" class="clickable" style="font-size:1.5em;" data-toggle="modal" data-target="#Chat"><i class="fa fa-envelope"></i><span style="font-size:14px;"></span></a></li>
                        }

                    </ul>
                }
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @if (User.Identity.IsAuthenticated && (User.IsInRole("Bar") || User.IsInRole("SuperAdmin")))
        {
            <div id="ShoppingCart" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">WinkelWagen</h4>
                        </div>
                        <div class="modal-body">
                            @Html.Partial("../PartialViews/ShoppingCartPartial", scvm)
                        </div>
                        <div class="modal-footer">
                            <a class="btn btn-default" href="/Home/ShoppingCart">Verder Naar Bestellen</a>
                        </div>
                    </div>

                </div>
            </div>
        }
        @if (User.Identity.IsAuthenticated)
        {
            <div id="NotificationModal" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Bericht van DC</h4>
                        </div>
                        <div class="modal-body">
                            <p id="Notification"></p>
                        </div>
                        <div class="modal-footer">

                        </div>
                    </div>

                </div>
            </div>

            <div id="Chat" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <img src="~/Content/Images/districhat_logo.png" class="logo" />
                        </div>
                        <div class="modal-body">
                            <div class="text-center">
                                <select id="recipient" class="chatrecipient">
                                    @if (!User.IsInRole("Bar"))
                                    {

                                    }
                                    else
                                    {
                                        <option value="8">Distributie</option>
                                    }
                                </select>
                                <input type="text" class="chatinput" id="message" />
                                <input type="button" class="btn btn-default" id="sendmessage" value="Verstuur bericht" />
                            </div>
                            <div id="chatCont" style="max-height:10em; overflow-y:scroll; overflow-x:hidden">
                                <ul id="Discussion"></ul>
                            </div>
                        </div>

                        <div class="modal-footer">

                        </div>
                    </div>

                </div>
            </div>
        }
        @RenderBody()
        <footer>
            <hr />
            <p class="footertext">&copy; @DateTime.Now.Year - Dennis Aspers</p>
        </footer>
    </div>



    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery.signalR-2.2.3.min.js"></script>
    <script src="~/Scripts/jquery-serializeForm.js"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    @RenderSection("scripts", required: false)
    @RenderSection("confirmation", required: false)
    @if (User.Identity.IsAuthenticated)
    {
        <script>
            var notificationHub = $.connection.notificationHub;
            notificationHub.client.addMessageToPage = function (message) {
                $('#Notification').text(message);
                $('#NotificationModal').modal();
            };

            notificationHub.client.addMessageToChat = function (name, message) {
                addToConversation(name, message);
            };

            notificationHub.client.updateOverview = function (response) {
                if (document.title.includes("Bestel Overzicht")) {
                    location.reload();
                }
            };

            $.connection.hub.start()
                .done(function () {
                    $.getJSON('@Html.Raw(Url.Action("GetLiveConnections", "Home"))', function (response) {
                        $.each(response, function (key, value) {
                            $.each(value, function (key, value) {
                                if ($.type(value) != 'string') {
                                    if (key == 'User') {
                                        var ID = 0;
                                        var Name = '';
                                        $.each(value, function (key, value) {
                                            if (key == 'ID') {
                                                ID = value;
                                            }
                                            else if (key == 'Name') {
                                                Name = value
                                            }
                                        });
                                        $('#recipient').append($('<option>', {
                                            value: ID,
                                            text: Name
                                        }));
                                    }
                                }
                            });
                        });
                    });

                    $.getJSON('@Html.Raw(Url.Action("GetChatHistory", "Home", new { userID = Convert.ToInt16(identity.Claims.Last().Value) }))', function (response) {
                        $.each(response, function (key, value) {
                            var Sender = '';
                            var Message = '';
                            $.each(value, function (key, value) {
                                if (key == 'Sender') {
                                    $.each(value, function (key, value) {
                                        if (key == 'Name') {
                                            Sender = value;
                                        }
                                    });
                                } else if (key == 'Message') {
                                    Message = value;
                                }
                            });
                            addToConversation(Sender, Message);
                        });
                    });

                    $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        notificationHub.server.chat($('#recipient').val(), $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    });


                })
                .fail(function () { console.log('Could not Connect!'); });

            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }

            function addToConversation(name, message) {
                $('#Discussion').append($('<li>').append('<strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message)));
                scrollToBottom();
            }

            $('#Chat').on('shown.bs.modal', function (e) {
                scrollToBottom();
            });


            function scrollToBottom() {
                var container = $('#chatCont');
                var height = container[0].scrollHeight;
                container.scrollTop(height);
            }

            $('document').ready(function () {

            })

        </script>
    }
</body>
</html>
