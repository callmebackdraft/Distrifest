@using Models
@using Repositories
@model List<Order>
@{
    ViewBag.Title = "Bestel Overzicht";
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="text-center errorbox" style="margin-top:10px; width:99%; height:50px; background-color:#c8dff7">
        <span class="text-warning" style="margin-top:auto; margin-bottom:auto">@ViewBag.ErrorMessage</span>
    </div>
}

<div id="RejectionModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Weigering voor bestelling: <strong id="rejectOrderID"></strong></h4>
                <p class="danger"><strong>Let op: </strong> De bar krijgt een melding van deze weigering</p>
            </div>

            @using (Html.BeginForm("FurtherOrderStatus", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <input id="rejectInputID" type="hidden" name="_orderID" value="x" />
                    <input type="hidden" name="_orderStatuses" value="@OrderStatus.OrderStatusesEnum.Rejected" />
                    <select name="_returnURL" id="_returnURLSelect">
                        <option value="Vanwege voorraad redenen is uw bestelling geweigerd">Voorraad</option>
                        <option value="De bestelling bevat onvoldoende producten om bestelling te leveren">Onvoldoende besteld</option>
                        <option value="x">Anders</option>
                    </select>
                    <br />
                    <p id="returnURLTextInput">Geef reden van weigering op:<input type="text" name="x" id="_returnURLTextInput" oninvalid="this.setCustomValidity('Geef een reden op')" oninput="setCustomValidity('')" /></p>
                    <br />
                    
                    
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-green" value="Bevestig Weigering" />
                </div>
            }
        </div>

    </div>
</div>

<div class="row">
    <h2>Nog te verwerken</h2>
    <table class="table table-responsive table-striped table-hover table-bordered" id="waitingTable">
        <thead>
            <tr>
                <th class="col-xs-1">Bestel NR</th>
                <th class="col-xs-1">Bar</th>
                <th class="col-xs-3">Aantal Producten</th>
                <th class="col-xs-3 text-center">Tijd Besteld</th>
                <th class="col-xs-2 text-center">Neem In behandeling</th>
                <th>Weiger</th>
                <th>Bekijk</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Order order in Model)
            {
                if (order.Statuses.Exists(x => x.RegisteredStatus == OrderStatus.OrderStatusesEnum.WaitingForDC) && order.Statuses.Count <= 2)
                {
                    int ProductAmount = 0;
                    @*<tr onclick="window.open('@(Url.Action("ShowOrder", "Home", new { _orderID = order.ID }))')">*@
                    <tr>
                        <td>@order.ID</td>
                        <td>@order.CustomerID</td>
                        @foreach (OrderLine prod in order.Products)
                        {
                            ProductAmount += prod.Amount;
                        }
                        <td>@ProductAmount</td>
                        @foreach (OrderStatus os in order.Statuses)
                        {
                            if (os.RegisteredStatus == OrderStatus.OrderStatusesEnum.WaitingForDC)
                            {
                                <td class="text-center">@os.RegisteredDate</td>
                            }
                        }
                        <td class="text-center">
                            @using (Html.BeginForm("FurtherOrderStatus", "Home", FormMethod.Post))
                            {
                                <input type="hidden" name="_orderID" value="@order.ID" />
                                <input type="hidden" name="_orderStatuses" value="@OrderStatus.OrderStatusesEnum.Processing" />
                                <input type="hidden" name="_returnURL" value="@Request.RawUrl" />
                                <input type="submit" class="btn btn-default" value="Behandelen" />
                            }
                        </td>
                        <td class="text-center">
                            <input id="clickMe" type="button" class="btn btn-default" value="Weiger" onclick="reject(@order.ID);" />
                        </td>
                        <td class="text-center"><input type="button" class="btn btn-default" value="Bekijk" onclick="window.open('@(Url.Action("ShowOrder", "Home", new { _orderID = order.ID }))')" /></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <h2>In Verwerking</h2>
    <table class="table table-responsive table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th class="col-xs-1">Bestel NR</th>
                <th class="col-xs-1">Bar</th>
                <th class="col-xs-3">Aantal Producten</th>
                <th class="col-xs-3 text-center">Tijd Aangenomen</th>
                <th class="col-xs-2 text-center">Verwerkt</th>
                <th class="text-center">Bekijk</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Order order in Model)
            {
                if (order.Statuses.Exists(x => x.RegisteredStatus == OrderStatus.OrderStatusesEnum.Processing) && order.Statuses.Count <= 3)
                {
                    <tr>
                        <td>@order.ID</td>
                        <td>@order.CustomerID</td>
                        <td>@order.Products.Count</td>
                        @foreach (OrderStatus os in order.Statuses)
                        {
                            if (os.RegisteredStatus == OrderStatus.OrderStatusesEnum.Processing)
                            {
                                <td class="text-center">@os.RegisteredDate</td>
                            }
                        }
                        <td class="text-center">
                            @using (Html.BeginForm("FurtherOrderStatus", "Home", FormMethod.Post))
                            {
                                <input type="hidden" name="_orderID" value="@order.ID" />
                                <input type="hidden" name="_orderStatuses" value="@OrderStatus.OrderStatusesEnum.Delivered" />
                                <input type="hidden" name="_returnURL" value="@Request.RawUrl" />
                                <input type="submit" class="btn btn-default" value="Afgehandeld" />
                            }
                        </td>
                        <td class="text-center"><input type="button" class="btn btn-default" value="Bekijk" onclick="window.open('@(Url.Action("ShowOrder", "Home", new { _orderID = order.ID }))')" /></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section scripts{
    <script>
        function reject(_orderID) {
            $('#RejectionModal').modal();
            $('input[id="rejectInputID"]').val(_orderID);
            $('#rejectOrderID').html(_orderID);
        }

        $('#_returnURLSelect').on('change', function () {
            if (this.value == "x") {
                $('#_returnURLSelect').attr('name', 'x');
                $("#_returnURLTextInput").attr('name', '_returnURL');
                $("#_returnURLTextInput").attr('name', '_returnURL');
                $("#_returnURLTextInput").prop('required', true);
                $("#_returnURLTextInput").prop('disabled', false);
                $("#returnURLTextInput").show();
            } else {
                $('#_returnURLSelect').attr('name', '_returnURL');
                $("#_returnURLTextInput").attr('name', 'x');
                $("#_returnURLTextInput").prop('required', false);
                $("#_returnURLTextInput").prop('disabled', true);
                $("#returnURLTextInput").hide();
            }
        });

        $('document').ready(function () {
            $("#returnURLTextInput").hide();
        })
    </script>
}