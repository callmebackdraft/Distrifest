@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.title = "Winkelwagen";
    TempData["Return"] = "ShoppingCart";
    OLChangeViewModel OrderLineChanger;
}
@using DistriFest.Models.ViewModels
@using System.Text.RegularExpressions
@using Models
@model ShoppingCartViewModel


@if (ViewBag.ErrorMessage != null)
{
    <div class="text-center errorbox" style="margin-top:20px; width:99%; height:50px; background-color:#fff">
        <span class="text-warning" style="margin-top:auto; margin-bottom:auto">@ViewBag.ErrorMessage</span>
    </div>
}
<div class="row">
    <h2>WinkelWagen</h2>
    <p>Hier kunt u de bestelde producten controleren, waar nodig wijzigingen aanbrengen en en de bestelling doorsturen.</p>
    <table class="table table-responsive table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th class="col-xs-2">Aantal</th>
                <th class="col-xs-2">Product</th>
                <th class="col-xs-6">Product Beschrijving</th>
                <th class="col-xs-1 text-center">Verwijder</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Order.Products.Count() > 0)
            {

                foreach (OrderLine order in Model.Order.Products)
                {
                    <tr>
                        <td class="text-center">
                            @using (Html.BeginForm("ChangeProductInOrder", "Home", OrderLineChanger = new OLChangeViewModel { OrderID = Model.Order.ID, ProdID = order.Product.ID }, FormMethod.Post, new { style = "display: inline" }))
                            {
                                @Html.TextBox("Amount", order.Amount, new { Value = order.Amount, type = "Number", min = "0", style = "width: 50px;" })
                                <input type="submit" value="Opslaan" class="btn btn-default" style="display:inline; color: #fff; background: linear-gradient(#b3b3b3, #7a7a7a);" onclick="" />
                            }
                        </td>
                        <td>@Regex.Replace(order.Product.Name, @"(?!^)(?:[A-Z](?:[a-z]+|(?:[A-Z\d](?![a-z]))*)|\d+)", " $0")</td>
                        @if (order.Product.VolumeType == "Liter")
                        {
                            <td>Fust met inhoud van @order.Product.Volume Liter</td>
                        }
                        else
                        {
                            <td>Verpakking met inhoud van @order.Product.Volume @order.Product.VolumeType</td>
                        }
                        @Html.Partial("../PartialViews/PartialShoppingCartTable", OrderLineChanger)
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" style="background-color: #fff; color: #d60000;">Er zijn nog geen producten aan uw winkelwagen toegevoegd.</td>
                </tr>
            }


        </tbody>
    </table>
    @if (Model.Order.Products.Count() > 0)
    {
        <div class="container text-right">
            @using (Html.BeginForm("FurtherOrderStatus", "Home", FormMethod.Post))
            {
                <input type="hidden" name="_orderID" value="@Model.Order.ID" />
                <input type="hidden" name="_orderStatuses" value="@OrderStatus.OrderStatusesEnum.WaitingForDC" />
                <input type="hidden" name="_returnURL" value="@Request.RawUrl" />
                <input type="submit" value="Bevestig Bestelling" class="btn btn-default" style="color: #fff; background: linear-gradient(#b3b3b3, #7a7a7a);" onclick="" />
            }
        </div>
    }
</div>
